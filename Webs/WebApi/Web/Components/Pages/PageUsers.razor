@page "/users"

@rendermode InteractiveServer

@using Web.Models
@using Blazorise.DataGrid
@using Web.Servies

@inject IJSRuntime JSRuntime

<div style="display: flex; flex-direction: row; justify-content: space-between">
    <h3>Пользователи</h3>
    <a class="btn btn-primary" href="/users/0">Добавить</a>
</div>

<DataGrid TItem="User" Data="@users" ReadData="OnReadData">
    <DataGridColumns>
        <DataGridColumn Field="@nameof(User.Id)" Caption="Id"></DataGridColumn>
        <DataGridColumn Field="@nameof(User.Login)" Caption="Логин"></DataGridColumn>
        <DataGridColumn Field="@nameof(User.Items)" Caption="Предметы"></DataGridColumn>
        <DataGridColumn Field="@nameof(User.Role.Name)" Caption="Роль"></DataGridColumn>
        <DataGridColumn>
            <DisplayTemplate>
                <a class="btn btn-primary" href="/users/@context.Id">Редактировать</a>
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn Caption="">
            <DisplayTemplate>
                <button class="btn btn-primary" @onclick="() => BtnDelete(context.Id)">Удалить</button>
            </DisplayTemplate>
        </DataGridColumn>
    </DataGridColumns>
</DataGrid>

@code {
    private List<User> users = new List<User>();

    protected override async Task OnInitializedAsync()
    {
        LoadData();
    }

    private void LoadData()
    {
        users = DataManage.Users.ToList();
    }

    private void OnReadData(DataGridReadDataEventArgs<User> e)
    {
        LoadData();
    }

    private async void BtnDelete(int userId)
    {
        bool result = await JSRuntime.InvokeAsync<bool>("confirm", "Вы уверены, что хотите удалить этот элемент?");
        if (result)
            await NetManage.Delete($"/api/Users/{userId}");
    }
}
